name: release-build

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: "x86_64-apple-darwin"
            args: "--target x86_64-apple-darwin"
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
            args: "--target aarch64-apple-darwin"
          - platform: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"
            args: ""
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: bun install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Disable code signing for unsigned builds
          APPLE_SIGNING_IDENTITY: "-"
        with:
          args: ${{ matrix.args }}

      - name: Create installation instructions (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          cat > INSTALL_INSTRUCTIONS.txt << 'EOF'
          TIMBER - macOS Installation Instructions
          =======================================
          
          This is an UNSIGNED build. To install on macOS:
          
          1. Download and open the .dmg file
          2. Drag Timber to Applications folder
          3. Right-click Timber in Applications and select "Open"
          4. Click "Open" when macOS warns about unsigned developer
          
          Alternative method:
          1. In System Settings > Privacy & Security
          2. Click "Open Anyway" for Timber if blocked
          
          Target: ${{ matrix.target }}
          Build Date: $(date)
          EOF

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/
            src-tauri/target/release/bundle/
            INSTALL_INSTRUCTIONS.txt
          if-no-files-found: warn
          retention-days: 30
